// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package templates_templ

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"encoding/json"
	"fmt"
	"github.com/llmang/llmango/llmango"
)

// PromptsPage displays a list of all prompts
func PromptsPage(prompts map[string]*llmango.Prompt, baseRoute string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div x-data=\"{createPromptOpen:false}\"><h2>Prompts</h2><div class=\"card-container\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for id, prompt := range prompts {
				templ_7745c5c3_Err = PromptCard(id, prompt, baseRoute).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = NewItemCard("Add new prompt", "createPromptOpen=open").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = CardStyles().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = JSONFormatter().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = CreatePromptModal("createPromptOpen").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = PromptStyles().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("Prompts", baseRoute).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// PromptCard displays a prompt card with details and links
func PromptCard(id string, prompt *llmango.Prompt, baseRoute string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<a href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 templ.SafeURL = safeURL(baseRoute + "/prompt/" + id)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var4)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\" class=\"card clickable card-link\"><div class=\"model-badge\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(prompt.Model)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 33, Col: 41}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(prompt.Messages) > 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<p class=\"truncate-text message-preview\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(getMessageContent(prompt.Messages[0]))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 35, Col: 83}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<p class=\"message-preview\">No messages</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "<div class=\"card-footer\"><p class=\"message-count\">Messages: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", len(prompt.Messages)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 40, Col: 79}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</p><p class=\"card-footer-id\">ID: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(id)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 41, Col: 37}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</p></div></a>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// PromptDetailPage displays details for a specific prompt
func PromptDetailPage(promptUID string, prompt *llmango.Prompt, baseRoute string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var9 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var9 == nil {
			templ_7745c5c3_Var9 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var10 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<div x-data=\"{\n\t    warningOpen:false,\n\t\teditPromptOpen:false,\n\t\tpromptData: null,\n\t\t\n\t\t// Functions\n\t\tgetPromptData() {\n\t\t\ttry {\n\t\t\t\tthis.promptData = JSON.parse(document.getElementById(&#39;prompt-data&#39;).textContent);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(&#39;Error parsing prompt data:&#39;, e);\n\t\t\t}\n\t\t},\n\t\t\n\t\tfillEditForm() {\n\t\t\tif (!this.promptData) return;\n\t\t\t\n\t\t\tdocument.getElementById(&#39;edit-model&#39;).value = this.promptData.model || &#39;&#39;;\n\t\t\t\n\t\t\tif (this.promptData.parameters) {\n\t\t\t\tdocument.getElementById(&#39;edit-temperature&#39;).value = this.promptData.parameters.temperature || &#39;&#39;;\n\t\t\t\tdocument.getElementById(&#39;edit-max-tokens&#39;).value = this.promptData.parameters.max_tokens || &#39;&#39;;\n\t\t\t\tdocument.getElementById(&#39;edit-top-p&#39;).value = this.promptData.parameters.top_p || &#39;&#39;;\n\t\t\t\tdocument.getElementById(&#39;edit-frequency-penalty&#39;).value = this.promptData.parameters.frequency_penalty || &#39;&#39;;\n\t\t\t\tdocument.getElementById(&#39;edit-presence-penalty&#39;).value = this.promptData.parameters.presence_penalty || &#39;&#39;;\n\t\t\t}\n\t\t},\n\t\t\n\t\tdeletePrompt() {\n\t\t\tif (!confirm(&#39;⚠️ Are you sure you want to delete this prompt? This action cannot be undone and may affect existing solutions.&#39;)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tfetch(`/api/prompts/${ promptUID }/delete`, {\n\t\t\t\tmethod: &#39;POST&#39;,\n\t\t\t\theaders: { &#39;Content-Type&#39;: &#39;application/json&#39; }\n\t\t\t})\n\t\t\t.then(response =&gt; response.json())\n\t\t\t.then(data =&gt; {\n\t\t\t\tif (data.success) {\n\t\t\t\t\twindow.location.href = &#39;/prompts&#39;;\n\t\t\t\t} else {\n\t\t\t\t\talert(&#39;Error: &#39; + data.error);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error =&gt; {\n\t\t\t\talert(&#39;Error: &#39; + error);\n\t\t\t});\n\t\t},\n\t\t\n\t\tupdatePrompt() {\n\t\t\tconst getNumberValue = (id) =&gt; {\n\t\t\t\tconst value = document.getElementById(id).value;\n\t\t\t\treturn value === &#39;&#39; ? null : parseFloat(value);\n\t\t\t};\n\t\t\t\n\t\t\tconst model = document.getElementById(&#39;edit-model&#39;).value;\n\t\t\tconst parameters = {};\n\t\t\t\n\t\t\tconst temperature = getNumberValue(&#39;edit-temperature&#39;);\n\t\t\tconst maxTokens = getNumberValue(&#39;edit-max-tokens&#39;);\n\t\t\tconst topP = getNumberValue(&#39;edit-top-p&#39;);\n\t\t\tconst frequencyPenalty = getNumberValue(&#39;edit-frequency-penalty&#39;);\n\t\t\tconst presencePenalty = getNumberValue(&#39;edit-presence-penalty&#39;);\n\t\t\t\n\t\t\tif (temperature !== null) parameters.temperature = temperature;\n\t\t\tif (maxTokens !== null) parameters.max_tokens = maxTokens;\n\t\t\tif (topP !== null) parameters.top_p = topP;\n\t\t\tif (frequencyPenalty !== null) parameters.frequency_penalty = frequencyPenalty;\n\t\t\tif (presencePenalty !== null) parameters.presence_penalty = presencePenalty;\n\t\t\t\n\t\t\tconst prompt = {\n\t\t\t\tmodel: model,\n\t\t\t\tparameters: parameters\n\t\t\t};\n\t\t\t\n\t\t\tif (!confirm(&#39;⚠️ Are you sure you want to update this prompt? This action cannot be undone and may affect existing solutions.&#39;)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tfetch(`/api/prompts/${ promptUID }/update`, {\n\t\t\t\tmethod: &#39;POST&#39;,\n\t\t\t\theaders: { &#39;Content-Type&#39;: &#39;application/json&#39; },\n\t\t\t\tbody: JSON.stringify(prompt)\n\t\t\t})\n\t\t\t.then(response =&gt; response.json())\n\t\t\t.then(data =&gt; {\n\t\t\t\tif (data.success) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else {\n\t\t\t\t\talert(&#39;Error: &#39; + data.error);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error =&gt; {\n\t\t\t\talert(&#39;Error: &#39; + error);\n\t\t\t});\n\t\t}\n\t}\" x-init=\"getPromptData()\"><h2>Prompt: ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(prompt.UID)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 150, Col: 26}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</h2><div class=\"card\"><div class=\"card-header\"><h3>Details</h3></div><div class=\"model-badge\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var12 string
			templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(prompt.Model)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 157, Col: 42}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "</div><h4>Parameters:</h4><div class=\"json-preview\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 string
			templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%v", prompt.Parameters))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 160, Col: 67}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "</div><h4>Messages:</h4>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, message := range prompt.Messages {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<div class=\"message-card\"><p class=\"message-role\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var14 string
				templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(message.Role)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 165, Col: 43}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</p><pre class=\"message-content\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var15 string
				templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(message.Content)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 166, Col: 51}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</pre></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "<details class=\"prompt-debug\"><summary>Debug Info</summary><pre>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 string
			templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%#v", prompt))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 172, Col: 37}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "</pre></details> <details class=\"unsafe-actions\"><summary>⚠️ Unsafe Actions</summary><div class=\"unsafe-actions-content\"><p class=\"warning-text\">These actions may affect data consistency and cannot be undone. Use with caution.</p><div class=\"unsafe-buttons\"><button class=\"btn btn-warning\" @click=\"Alpine.store(&#39;warning&#39;, true)\">⚠️ Edit Prompt</button> <button class=\"btn btn-danger\" @click=\"deletePrompt()\">⚠️ Delete Prompt</button></div></div></details><!-- Store prompt data for JavaScript access --><script id=\"prompt-data\" type=\"application/json\">\n\t\t\t\t@promptDataJSON(prompt)\n\t\t\t</script></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = PromptStyles().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = JSONFormatter().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = EditPromptModal(promptUID, "editPromptOpen").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = WarningModal(promptUID, "warningOpen").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("Prompt", baseRoute).Render(templ.WithChildren(ctx, templ_7745c5c3_Var10), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Helper to render prompt data as JSON
func promptDataJSON(prompt *llmango.Prompt) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var17 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var17 == nil {
			templ_7745c5c3_Var17 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if data, err := json.Marshal(prompt); err == nil {
			var templ_7745c5c3_Var18 string
			templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(string(data))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 213, Col: 16}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
		}
		return nil
	})
}

// EditPromptModal component for editing an existing prompt
func EditPromptModal(promptUID string, openVar string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var19 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var19 == nil {
			templ_7745c5c3_Var19 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var20 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "<div class=\"warning-section\"><h4>⚠️ Warning: Data Consistency Risk</h4><p>Editing this prompt may affect existing solutions and goals that use it. Please ensure you understand the implications before proceeding.</p></div><form id=\"edit-prompt-form\"><div class=\"form-group\"><label for=\"edit-model\">Model</label> <input type=\"text\" id=\"edit-model\" class=\"form-control\"></div><div class=\"form-group\"><label>Parameters</label><div class=\"parameters-grid\"><div class=\"parameter-item\"><label for=\"edit-temperature\">Temperature</label> <input type=\"number\" id=\"edit-temperature\" class=\"form-control\" step=\"0.1\" min=\"0\" max=\"2\"></div><div class=\"parameter-item\"><label for=\"edit-max-tokens\">Max Tokens</label> <input type=\"number\" id=\"edit-max-tokens\" class=\"form-control\" min=\"1\"></div><div class=\"parameter-item\"><label for=\"edit-top-p\">Top P</label> <input type=\"number\" id=\"edit-top-p\" class=\"form-control\" step=\"0.1\" min=\"0\" max=\"1\"></div><div class=\"parameter-item\"><label for=\"edit-frequency-penalty\">Frequency Penalty</label> <input type=\"number\" id=\"edit-frequency-penalty\" class=\"form-control\" step=\"0.1\" min=\"-2\" max=\"2\"></div><div class=\"parameter-item\"><label for=\"edit-presence-penalty\">Presence Penalty</label> <input type=\"number\" id=\"edit-presence-penalty\" class=\"form-control\" step=\"0.1\" min=\"-2\" max=\"2\"></div></div></div></form>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Modal("Edit Prompt", openVar).Render(templ.WithChildren(ctx, templ_7745c5c3_Var20), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// WarningModal component for displaying confirmation dialog
func WarningModal(promptUID string, openVar string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var21 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var21 == nil {
			templ_7745c5c3_Var21 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var22 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "<div class=\"warning-section\"><h4>⚠️ Data Consistency Risk</h4><p>Editing this prompt may affect existing solutions and goals that use it. This action cannot be undone.</p><p>Are you sure you want to proceed?</p></div><div class=\"modal-actions\"><button type=\"button\" class=\"btn btn-primary\" @click=\"$data.fillEditForm(); open = false; Alpine.store(&#39;edit-prompt&#39;, true)\">⚠️ Proceed</button> <button type=\"button\" class=\"btn btn-secondary\" @click=\"open = false\">Cancel</button></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Modal("Warning", openVar).Render(templ.WithChildren(ctx, templ_7745c5c3_Var22), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// CreatePromptModal component creates a new prompt
func CreatePromptModal(openVar string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var23 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var23 == nil {
			templ_7745c5c3_Var23 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var24 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "<form id=\"new-prompt-form\" class=\"prompt-form\" x-data=\"{model:null}\"><div class=\"form-group\"><label for=\"promptModel\" class=\"form-label\">Model</label> <select id=\"promptModel\" name=\"model\" class=\"form-control\" required><option value=\"\">Select a model</option> <option value=\"gpt-4\">GPT-4</option> <option value=\"gpt-3.5-turbo\">GPT-3.5 Turbo</option> <option value=\"claude-3-opus\">Claude 3 Opus</option> <option value=\"claude-3-sonnet\">Claude 3 Sonnet</option> <option value=\"claude-3-haiku\">Claude 3 Haiku</option> <option value=\"gemini-pro\">Gemini Pro</option> <option value=\"gemini-1.5-pro\">Gemini 1.5 Pro</option> <option value=\"llama-3-70b\">Llama 3 70B</option> <option value=\"mistral-large\">Mistral Large</option></select></div><div class=\"form-group\"><label for=\"promptTemperature\" class=\"form-label\">Temperature</label> <input type=\"number\" id=\"promptTemperature\" name=\"temperature\" class=\"form-control\" min=\"0\" max=\"2\" step=\"0.1\" value=\"0.7\" required></div><div class=\"form-group\"><label for=\"promptSystemMessage\" class=\"form-label\">System Message</label> <textarea id=\"promptSystemMessage\" name=\"system_message\" class=\"form-control\" rows=\"6\" placeholder=\"Enter your system message here...\" required></textarea></div><div class=\"form-group\"><label for=\"promptUserMessage\" class=\"form-label\">User Message</label> <textarea id=\"promptUserMessage\" name=\"user_message\" class=\"form-control\" rows=\"6\" placeholder=\"Enter the user message template here...\" required></textarea></div><div class=\"variables-box\"><p class=\"variables-help\">You can use these variables in your prompt:</p><div class=\"available-variables\"><code>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var25 string
			templ_7745c5c3_Var25, templ_7745c5c3_Err = templ.JoinStringErrs("{{.Input}}")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 327, Col: 24}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var25))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "</code> - The goal's input data</div></div></form><script>\n\t\t\tfunction createNewPrompt() {\n\t\t\t\tconst form = document.getElementById('new-prompt-form');\n\t\t\t\tif (!form.checkValidity()) {\n\t\t\t\t\tform.reportValidity();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst model = document.getElementById('promptModel').value;\n\t\t\t\tconst temperature = parseFloat(document.getElementById('promptTemperature').value);\n\t\t\t\tconst systemMessage = document.getElementById('promptSystemMessage').value;\n\t\t\t\tconst userMessage = document.getElementById('promptUserMessage').value;\n\t\t\t\t\n\t\t\t\tconst promptData = {\n\t\t\t\t\tmodel: model,\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\ttemperature: temperature\n\t\t\t\t\t},\n\t\t\t\t\tmessages: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trole: \"system\",\n\t\t\t\t\t\t\tcontent: systemMessage\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trole: \"user\",\n\t\t\t\t\t\t\tcontent: userMessage\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// Send the prompt data to the server\n\t\t\t\tfetch('/api/prompts', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(promptData)\n\t\t\t\t})\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tconsole.log('Success:', data);\n\t\t\t\t\tAlpine.data(")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var26, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(openVar)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `prompts.templ`, Line: 373, Col: 26}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var26)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, ",false)\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\talert('Failed to create prompt');\n\t\t\t\t});\n\t\t\t}\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Modal("new-prompt", openVar).Render(templ.WithChildren(ctx, templ_7745c5c3_Var24), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// PromptStyles component contains CSS styles for prompt components
func PromptStyles() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var27 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var27 == nil {
			templ_7745c5c3_Var27 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "<style>\n\n\t\t\n\t\t.prompt-title {\n\t\t\tmargin-top: 0;\n\t\t\tmargin-bottom: 10px;\n\t\t\twhite-space: nowrap;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\tfont-size: 1.1rem;\n\t\t}\n\t\t\n\t\t.prompt-meta {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tgap: 8px;\n\t\t}\n\t\t\n\t\t.model-badge {\n\t\t\tdisplay: inline-block;\n\t\t\tbackground: #e6f3ff;\n\t\t\tpadding: 4px 8px;\n\t\t\tborder-radius: 4px;\n\t\t\tfont-size: 0.9rem;\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t\t\n\t\t.model-badge.small {\n\t\t\tfont-size: 0.75rem;\n\t\t\tpadding: 2px 6px;\n\t\t\tdisplay: inline-block;\n\t\t}\n\t\t\n\t\t.message-count {\n\t\t\tfont-size: 0.8rem;\n\t\t\tcolor: #666;\n\t\t}\n\t\t\n\t\t.message-preview {\n\t\t\tmargin-top: 10px;\n\t\t\tborder-top: 1px solid #eee;\n\t\t\tpadding-top: 10px;\n\t\t}\n\t\t\n\t\t.preview-label {\n\t\t\tfont-size: 0.75rem;\n\t\t\tcolor: #666;\n\t\t\tmargin-bottom: 3px;\n\t\t}\n\t\t\n\t\t.preview-content {\n\t\t\tfont-size: 0.8rem;\n\t\t\tcolor: #333;\n\t\t\tdisplay: -webkit-box;\n\t\t\t-webkit-line-clamp: 3;\n\t\t\t-webkit-box-orient: vertical;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\tmax-height: 4.5em;\n\t\t\tfont-family: monospace;\n\t\t\tbackground-color: #f8f8f8;\n\t\t\tpadding: 5px;\n\t\t\tborder-radius: 3px;\n\t\t\tline-height: 1.5;\n\t\t\tword-break: break-word;\n\t\t}\n\t\t\n\t\t/* Variables box styles */\n\t\t.variables-box {\n\t\t\tbackground-color: #f8f8ff;\n\t\t\tborder: 1px solid #e0e0ff;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 10px;\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t\t\n\t\t.variables-help {\n\t\t\tmargin-top: 0;\n\t\t\tmargin-bottom: 10px;\n\t\t\tfont-size: 0.9rem;\n\t\t\tcolor: #555;\n\t\t}\n\t\t\n\t\t.available-variables code {\n\t\t\tbackground-color: #eef;\n\t\t\tpadding: 2px 4px;\n\t\t\tborder-radius: 3px;\n\t\t\tfont-family: monospace;\n\t\t}\n\t\t\n\t\t.message-card {\n\t\t\tmargin-bottom: 15px;\n\t\t\tpadding: 1rem;\n\t\t\tborder: 1px solid #ddd;\n\t\t\tborder-radius: 0.5rem;\n\t\t}\n\t\t\n\t\t.message-role {\n\t\t\tfont-weight: 600;\n\t\t\tmargin-top: 0;\n\t\t\tmargin-bottom: 0.5rem;\n\t\t\tcolor: #555;\n\t\t}\n\t\t\n\t\t.message-content {\n\t\t\tmargin: 0;\n\t\t\twhite-space: pre-wrap;\n\t\t\toverflow-x: auto;\n\t\t\tfont-family: monospace;\n\t\t\tfont-size: 0.9rem;\n\t\t\tbackground-color: #f8f8f8;\n\t\t\tpadding: 0.75rem;\n\t\t\tborder-radius: 0.25rem;\n\t\t}\n\t\t\n\t\t.prompt-debug {\n\t\t\tmargin-top: 2rem;\n\t\t\tborder-top: 1px solid #eee;\n\t\t\tpadding-top: 0.5rem;\n\t\t}\n\t\t\n\t\t.prompt-debug summary {\n\t\t\tcursor: pointer;\n\t\t\tcolor: #666;\n\t\t\tfont-size: 0.8rem;\n\t\t}\n\t\t\n\t\t.prompt-debug pre {\n\t\t\tbackground: #f5f5f5;\n\t\t\tpadding: 0.5rem;\n\t\t\tborder-radius: 0.25rem;\n\t\t\toverflow: auto;\n\t\t}\n\n\t\t.warning-section {\n\t\t\tbackground-color: #fff3cd;\n\t\t\tborder: 1px solid #ffeeba;\n\t\t\tborder-radius: 0.5rem;\n\t\t\tpadding: 1.5rem;\n\t\t\tmargin-bottom: 1.5rem;\n\t\t}\n\n\t\t.warning-icon {\n\t\t\tfont-size: 2rem;\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\n\t\t.warning-section h4 {\n\t\t\tcolor: #856404;\n\t\t\tmargin-top: 0;\n\t\t}\n\n\t\t.warning-section p {\n\t\t\tcolor: #856404;\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\n\t\t.parameters-grid {\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n\t\t\tgap: 1rem;\n\t\t}\n\n\t\t.parameter-item {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tgap: 0.5rem;\n\t\t}\n\n\t\t.unsafe-actions {\n\t\t\tmargin-top: 1rem;\n\t\t\tborder-top: 1px solid #eee;\n\t\t\tpadding-top: 0.5rem;\n\t\t}\n\t\t\n\t\t.unsafe-actions summary {\n\t\t\tcursor: pointer;\n\t\t\tcolor: #dc3545;\n\t\t\tfont-size: 0.8rem;\n\t\t\tfont-weight: 600;\n\t\t}\n\t\t\n\t\t.unsafe-actions-content {\n\t\t\tpadding: 1rem;\n\t\t\tbackground-color: #fff8f8;\n\t\t\tborder: 1px solid #ffd6d6;\n\t\t\tborder-radius: 0.25rem;\n\t\t\tmargin-top: 0.5rem;\n\t\t}\n\t\t\n\t\t.modal-footer {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-end;\n\t\t\tgap: 0.5rem;\n\t\t\tmargin-top: 1rem;\n\t\t}\n\t\t\n\n\t\t\n\t\t.form-group {\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
