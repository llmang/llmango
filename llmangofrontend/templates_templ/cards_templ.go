// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package templates_templ

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
)

// NewItemCard displays a card for creating new items
func NewItemCard(title string, onclick string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"card clickable new-card\" @click=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(onclick)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `cards.templ`, Line: 11, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"><div class=\"new-prompt-content\"><div class=\"plus-icon\">+</div><p>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `cards.templ`, Line: 14, Col: 13}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</p></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Helper function to get message content
func getMessageContent(message interface{}) string {
	// Handle openrouter.Message type
	switch m := message.(type) {
	case map[string]interface{}:
		if content, ok := m["content"]; ok {
			return fmt.Sprintf("%v", content)
		}
	default:
		// Try to access content field through reflection or handle the specific openrouter.Message type
		// For now return a placeholder
		return fmt.Sprintf("%v", m)
	}
	return "No content"
}

// CardStyles component contains CSS styles for card components
func CardStyles() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<style>\n\t.card-container{\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n\t\t\tgap:\n\t\t\t1.5rem;\n\t\t\tmargin-bottom: 2rem;\n\t\t}\n\t\t\n\t\t.card { \n\t\t\tborder: 1px solid #ddd; \n\t\t\tborder-radius: 5px; \n\t\t\tpadding: 15px; \n\t\t\tmin-width: 150px; \n\t\t\tbox-shadow: 0 2px 4px rgba(0,0,0,0.1); \n\t\t}\n\t\t\n\t\t.card h3 { \n\t\t\tmargin-top: 0; \n\t\t}\n\t\t\n\t\t.clickable {\n\t\t\tcursor: pointer;\n\t\t\ttransition: transform 0.2s, box-shadow 0.2s;\n\t\t}\n\t\t\n\t\t.clickable:hover {\n\t\t\ttransform: translateY(-2px);\n\t\t\tbox-shadow: 0 4px 8px rgba(0,0,0,0.1);\n\t\t}\n\t\t\n\t\t.plus-icon {\n\t\t\tfont-size: 24px;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\t\t\n\t\t.examples-grid {\n\t\t\tmargin-top: 10px;\n\t\t}\n\t\t\n\t\t.example-section {\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\t\t\n\t\t.example-title {\n\t\t\tmargin-top: 0;\n\t\t\tmargin-bottom: 5px;\n\t\t\tfont-size: 0.9rem;\n\t\t}\n\n\t\t.card-link {\n\t\t\tdisplay: block;\n\t\t\ttext-decoration: none;\n\t\t\tcolor: inherit;\n\t\t\ttransition: transform 0.2s, box-shadow 0.2s;\n\t\t}\n\n\t\t.card-header {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\n\t\t.truncate-text {\n\t\t\tdisplay: -webkit-box;\n\t\t\t-webkit-line-clamp: 3;\n\t\t\t-webkit-box-orient: vertical;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t}\n\n\t\t.card-footer-id {\n\t\t\tfont-size: 0.8rem;\n\t\t\tmargin-top: auto;\n\t\t\twhite-space: nowrap;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\tcolor: #666;\n\t\t}\n\n\t\t.message-preview {\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\n\t\t.card-footer {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\tmargin-top: auto;\n\t\t}\n\n\t\t.message-count {\n\t\t\tfont-size: 0.8rem;\n\t\t\tcolor: #666;\n\t\t}\n\n\t\t.new-card {\n\t\t\tcursor: pointer;\n\t\t}\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
